// Code your design here
module updown(clk, reset, enable, up_en, down_en, count);
  
  output reg [3:0] count;
  input clk, reset, enable, up_en, down_en;
  
  always @(posedge clk)begin
    if(reset == 1'b0) begin 
      count <= 4'b0000;
    end
  
  else if (enable == 1'b1 && up_en == 1'b1) begin
    count = count + 1;
  end
    
  else if (enable == 1'b1 && down_en == 1'b1) begin
    count = count - 1;
  end
  
  else 
    count <= count;
  end 
endmodule



// Code your testbench here
// or browse Examples
module tb;
  reg clk, reset, enable, up_en, down_en;
  wire [3:0] count;
  
  always #10 clk = ~clk;
  
  updown dut(clk, reset, enable, up_en, down_en, count);
  
  initial begin
    $monitor ("@%0dns reset=%b enable=%b up=%b down=%b count=%d",
             $time, reset, enable, up_en, down_en,count);
    {clk, reset, enable, up_en, down_en} <= 0;
    
    #30 reset = 1;
    $display("@%g De-Asserting reset", $time);
    #40 enable = 1;
    $display("@%g De-Asserting enable", $time);
    #40 up_en = 1;
             $display("@%g putting counter in up mode", $time);
       		#1000 down_en = 1;
    			up_en = 0;
             $display("@%g putting counter in down mode", $time);
             #80 $finish;
             end
             endmodule
    
